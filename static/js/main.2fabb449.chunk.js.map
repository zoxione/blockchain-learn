{"version":3,"sources":["hooks/useWindowDimensions.js","components/MainMenu/index.js","components/Page/index.js","components/ButtonNextPage/index.js","pages/Page0/data.js","pages/Page0/index.js","pages/Page1/data.js","pages/Page1/index.js","pages/Page2/data.js","pages/Page2/index.js","pages/Page3/data.js","pages/Page3/index.js","pages/Page4/data.js","pages/Page4/index.js","pages/Page5/data.js","pages/Page5/index.js","components/Iframe/index.js","pages/Page6/data.js","pages/Page6/index.js","pages/Page9/data.js","pages/Page9/index.js","App.js","index.js","components/MainMenu/styles.module.css","pages/Page9/styles.module.css","pages/Page1/styles.module.css","pages/Page2/styles.module.css","components/Iframe/styles.module.css","pages/Page6/styles.module.css","App.module.css","components/Page/styles.module.css","components/ButtonNextPage/styles.module.css","pages/Page0/styles.module.css","pages/Page3/styles.module.css","pages/Page5/styles.module.css"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","ButtonPage","props","dispatch","useDispatch","page","useSelector","state","language","useSound","process","volume","playSelect","data-title","titleRU","titleENG","className","styles","pagination_item","pagination_item_active","onClick","_page","type","payload","MainMenu","isSound","sound","loop","play","pause","playSwitch","pages","id","toggleLanguage","toggleSound","menu","sound_button","sound_on","sound_icon","sound_off","Menu","trigger","delay","min_menu","Label","align","map","i","Item","lang_button","lang_icon","alt","src","pagination","Page","children","ButtonNextPage","button_next","russian_text","title","description","button","english_text","Page0","text","Page1","opened","setOpen","blockchain","pannable","readonly","direction","nodes","edges","from","to","node","style","fill","properties","Button","btn_question","variant","o","size","Collapse","in","fontSize","list","Page2","main","Tooltip","wrapLines","withArrow","transition","transitionDuration","label","Page3","img","Page4","ScrollArea","Code","color","textAlign","marginBottom","block","length","Iframe","source","wrapper","iframe","seamless","scrolling","Page5","urlClicker","button_result","questionAnswers","question","answers","result","QuestionAnswer","answer","name","value","true","radio","answer1","answer2","answer3","Page9","countTrue","setCountTrue","isTestCompleted","setIsTestCompleted","checkResult","answerWrapperList","document","querySelectorAll","isValid","forEach","item","answerList","childNodes","isChecked","firstChild","checked","radios","count","index","background","disabled","block_result","btn_again","btn_check","App","Page6","defaultState","store","createStore","action","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2fabb449.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { AiFillSound, AiOutlineSound } from 'react-icons/ai';\nimport useSound from 'use-sound';\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\nimport { Menu } from '@mantine/core';\n\nimport styles from './styles.module.css';\n\nfunction ButtonPage(props) {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n    const language = useSelector(state => state.language);\n\n    const [playSelect] = useSound(process.env.PUBLIC_URL + '/sound/select.mp3', { volume: 0.25 });\n\n    const setPage = (_page) => {\n        dispatch({ type: \"SET_PAGE\", payload: _page });\n        playSelect();\n    }\n\n    return (\n        <button\n            data-title={language === \"rus\" ? props.titleRU : props.titleENG}\n            className={styles.pagination_item + ' ' + (page === props.page ? styles.pagination_item_active : '')}\n            onClick={() => setPage(props.page)}\n        />\n    )\n}\n\nfunction MainMenu() {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n    const language = useSelector(state => state.language);\n    const isSound = useSelector(state => state.sound);\n    const { width } = useWindowDimensions();\n\n    const [play, { pause }] = useSound(process.env.PUBLIC_URL + '/sound/background.mp3', { loop: true, volume: 0.25 });\n    const [playSwitch] = useSound(process.env.PUBLIC_URL + '/sound/switch.mp3', { volume: 0.25 });\n    const [playSelect] = useSound(process.env.PUBLIC_URL + '/sound/select.mp3', { volume: 0.25 });\n\n    const pages = [\n        { id: 1, titleRU: \"1. Блокчейн\", titleENG: \"1. Blockchain\" },\n        { id: 2, titleRU: \"2. Блок\", titleENG: \"2. Block\" },\n        { id: 3, titleRU: \"3. Безопасность\", titleENG: \"3. Security\" },\n        { id: 4, titleRU: \"4. Смарт-контракты\", titleENG: \"4. Smart-contracts\" },\n        { id: 5, titleRU: \"5. Майнинг\", titleENG: \"5. Mining\" },\n        { id: 6, titleRU: \"6. Игра\", titleENG: \"6. Game\" },\n        { id: 9, titleRU: \"9. Проверка знаний\", titleENG: \"9. Knowledge check\" },\n    ];\n\n    const toggleLanguage = () => {\n        dispatch({ type: \"TOGGLE_LANGUAGE\" });\n        playSwitch();\n    }\n\n    const toggleSound = () => {\n        dispatch({ type: \"TOGGLE_SOUND\" });\n        playSwitch();\n        if (!isSound) {\n            play();\n        }\n        else {\n            pause();\n        }\n    }\n\n    const setPage = (_page) => {\n        dispatch({ type: \"SET_PAGE\", payload: _page });\n        playSelect();\n    }\n\n    if (width < 640) {\n        return (\n            <nav className={styles.menu}>\n                <button className={styles.sound_button} onClick={() => toggleSound()}>\n                    {isSound === true &&\n                        <div className={styles.sound_on}>\n                            <AiFillSound className={styles.sound_icon} />\n                            {language === \"rus\" && <p>ВКЛ</p>}\n                            {language === \"eng\" && <p>ON</p>}\n                        </div>\n                    }\n                    {isSound === false &&\n                        <div className={styles.sound_off}>\n                            <AiOutlineSound className={styles.sound_icon} />\n                            {language === \"rus\" && <p>ВЫКЛ</p>}\n                            {language === \"eng\" && <p>OFF</p>}\n                        </div>\n                    }\n                </button>\n                {page !== 0 &&\n                    <Menu trigger=\"hover\" delay={100} className={styles.min_menu}>\n                        <Menu.Label align=\"left\">Menu</Menu.Label>\n                        {pages.map((page, i) => {\n                            return (\n                                <Menu.Item onClick={() => setPage(page.id)}>\n                                    {language === \"rus\" && page.titleRU}\n                                    {language === \"eng\" && page.titleENG}\n                                </Menu.Item>\n                            )\n                        })}\n                    </Menu>\n                }\n                {page === 0 &&\n                    <button className={styles.lang_button} onClick={() => toggleLanguage()}>\n                        {language === \"rus\" && <p>ИЗМЕНИТЬ ЯЗЫК</p>}\n                        {language === \"eng\" && <p>CHANGE LANGUAGE</p>}\n                        {language === \"rus\" &&\n                            <img className={styles.lang_icon} alt=\"rus\" src=\"https://img.icons8.com/fluency/40/000000/russian-federation-circular.png\" />\n                        }\n                        {language === \"eng\" &&\n                            <img className={styles.lang_icon} alt=\"eng\" src=\"https://img.icons8.com/fluency/40/000000/great-britain-circular.png\" />\n                        }\n                    </button>\n                }\n            </nav>\n        )\n    }\n    else {\n        return (\n            <nav className={styles.menu}>\n                <button className={styles.sound_button} onClick={() => toggleSound()}>\n                    {isSound === true &&\n                        <div className={styles.sound_on}>\n                            <AiFillSound className={styles.sound_icon} />\n                            {language === \"rus\" && <p>ВКЛ</p>}\n                            {language === \"eng\" && <p>ON</p>}\n                        </div>\n                    }\n                    {isSound === false &&\n                        <div className={styles.sound_off}>\n                            <AiOutlineSound className={styles.sound_icon} />\n                            {language === \"rus\" && <p>ВЫКЛ</p>}\n                            {language === \"eng\" && <p>OFF</p>}\n                        </div>\n                    }\n                </button>\n                {page !== 0 &&\n                    <div className={styles.pagination}>\n                        {pages.map((page, i) => {\n                            return (\n                                <ButtonPage page={page.id} titleRU={page.titleRU} titleENG={page.titleENG} />\n                            )\n                        })}\n                    </div>\n                }\n                {page === 0 &&\n                    <button className={styles.lang_button} onClick={() => toggleLanguage()}>\n                        {language === \"rus\" && <p>ИЗМЕНИТЬ ЯЗЫК</p>}\n                        {language === \"eng\" && <p>CHANGE LANGUAGE</p>}\n                        {language === \"rus\" &&\n                            <img className={styles.lang_icon} alt=\"rus\" src=\"https://img.icons8.com/fluency/40/000000/russian-federation-circular.png\" />\n                        }\n                        {language === \"eng\" &&\n                            <img className={styles.lang_icon} alt=\"eng\" src=\"https://img.icons8.com/fluency/40/000000/great-britain-circular.png\" />\n                        }\n                    </button>\n                }\n            </nav>\n        )\n    }\n}\n\nexport default MainMenu;","import styles from './styles.module.css';\n\nfunction Page(props) {\n    return (\n        <div id=\"page\" className={styles.page}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Page;","import { useDispatch, useSelector } from \"react-redux\";\nimport useSound from 'use-sound';\n\nimport styles from './styles.module.css';\n\nfunction ButtonNextPage(props) {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n\n    const soundUrl = process.env.PUBLIC_URL + '/sound/click.mp3';\n    const [play] = useSound(soundUrl, { volume: 0.5 });\n    \n    const nextPage = (_page) => {\n        dispatch({type: \"SET_PAGE\", payload: page + 1});\n        play();\n    }\n\n    return (\n        <button className={styles.button_next} onClick={() => nextPage()}>{props.children}</button>\n    )\n}\n\nexport default ButtonNextPage;","const russian_text = {\n    title: 'Что такое блокчейн?',\n    description: ['Длительность: 5 мин • CryptoAlliance 2022'],\n    button: 'Начать',\n}\n\nconst english_text = {\n    title: 'What is blockchain?',\n    description: ['Duration: 5 min • CryptoAlliance 2022'],\n    button: 'Start',\n}\n\nexport { russian_text, english_text };","import { useSelector } from \"react-redux\";\n\nimport Page from \"../../components/Page/index\";\nimport ButtonNextPage from \"../../components/ButtonNextPage/index\";\nimport styles from './styles.module.css';\nimport { russian_text, english_text } from './data';\n\nfunction Page0() {\n    const language = useSelector(state => state.language);\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    return (\n        <Page>\n            <h1 className={styles.title}>{text.title}</h1>\n            <p>{text.description[0]}</p>\n            <ButtonNextPage>{text.button}</ButtonNextPage>\n        </Page>\n    )\n}\n\nexport default Page0;","const russian_text = {\n    title: 'Блокчейн - это...',\n    description: [\n        'Блокчейн – это распределенная база данных. Представляет собой цепочку записей (блоков), которые нельзя поменять.',\n        'Но по какому принципу они соединяются? Давай разбираться!',\n        'Блокчейн — выстроенная по определённым правилам непрерывная последовательная цепочка блоков (связный список), содержащих информацию. Связь между блоками обеспечивается не только нумерацией, но и тем, что каждый блок содержит свою собственную хеш-сумму и хеш-сумму предыдущего блока. Изменение любой информации в блоке изменит его хеш-сумму. Чтобы соответствовать правилам построения цепочки, изменения хеш-суммы нужно будет записать в следующий блок, что вызовет изменения уже его собственной хеш-суммы. При этом предыдущие блоки не затрагиваются. Если изменяемый блок последний в цепочке, то внесение изменений может не потребовать существенных усилий. Но если после изменяемого блока уже сформировано продолжение, то изменение может оказаться крайне трудоёмким процессом. Дело в том, что обычно копии цепочек блоков хранятся на множестве разных компьютеров независимо друг от друга.'\n    ],\n    button: 'Разобраться',\n}\n\nconst english_text = {\n    title: 'Blockchain is...',\n    description: [\n        'Blockchain is a distributed database. It is a chain of records (blocks) that cannot be changed',\n        'But what principle is used to connect them? Let`s figure it out!',\n        'Blockchain is a continuous, sequential chain of blocks (a linked list) that contains information, lined up according to certain rules. The connection between blocks is provided not only by numbering, but also by the fact that each block contains its own hash sum and the hash sum of the previous block. Changing any information in a block will change its hash sum. To comply with the chain rules, the hash sum changes must be written to the next block, which will cause its own hash sum to change. The previous blocks are not affected. If the block to be modified is the last one in a chain, the modification would not require much effort. But if a continuation has already been generated after the modified block, the change can be a very laborious process. The point is that usually copies of block chains are stored on many different computers independently of each other.'\n    ],\n    button: 'Figure it out',\n}\n\nexport { russian_text, english_text };","import { useSelector } from \"react-redux\";\nimport { Canvas, Node } from 'reaflow';\nimport { useState } from 'react';\nimport { Button, Collapse } from '@mantine/core';\nimport { AiOutlineQuestionCircle } from 'react-icons/ai'\n\nimport styles from './styles.module.css';\nimport Page from \"../../components/Page/index\";\nimport ButtonNextPage from \"../../components/ButtonNextPage/index\";\nimport { russian_text, english_text } from './data';\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n\nfunction Page1() {\n    const language = useSelector(state => state.language);\n    const { width } = useWindowDimensions();\n\n    const [opened, setOpen] = useState(false);\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    return (\n        <Page>\n            <h2>{text.title}</h2>\n            <p>{text.description[0]}</p>\n            <div className={styles.blockchain}>\n                {width > 768\n                    ? <Canvas\n                        pannable={false}\n                        readonly={true}\n                        direction=\"RIGHT\"\n                        nodes={[\n                            { id: '1', text: 'Block 1' },\n                            { id: '2', text: 'Block 2' },\n                            { id: '3', text: 'Block 3' }\n                        ]}\n                        edges={[\n                            { id: '1-2', from: '1', to: '2' },\n                            { id: '2-3', from: '2', to: '3' }\n                        ]}\n                        node={(node: NodeProps) => (\n                            <Node\n                                {...node}\n                                style={{\n                                    fill: node.properties.id === '1' ? '#2563EB' : node.properties.id === '2' ? '#059669' : '#DC2626'\n                                }}\n                            />\n                        )}\n                    />\n                    : <Canvas\n                        pannable={false}\n                        readonly={true}\n                        direction=\"RIGHT\"\n                        nodes={[\n                            { id: '1', text: 'Block 1' },\n                            { id: '2', text: 'Block 2' },\n                        ]}\n                        edges={[\n                            { id: '1-2', from: '1', to: '2' },\n                        ]}\n                        node={(node: NodeProps) => (\n                            <Node\n                                {...node}\n                                style={{\n                                    fill: node.properties.id === '1' ? '#2563EB' : node.properties.id === '2' ? '#059669' : '#DC2626'\n                                }}\n                            />\n                        )}\n                    />\n                }\n            </div>\n\n            <Button className={styles.btn_question} variant=\"subtle\" onClick={() => setOpen((o) => !o)}>\n                <AiOutlineQuestionCircle size={40} />\n            </Button>\n            <Collapse in={opened} style={{ fontSize: '18px' }}>\n                {text.description[2]}\n            </Collapse>\n\n            <p>{text.description[1]}</p>\n\n            <ButtonNextPage>{text.button}</ButtonNextPage>\n        </Page>\n    )\n}\n\nexport default Page1;","const russian_text = {\n    title: 'Один блок содержит:',\n    list: ['любую информацию', 'уникальный хэш', 'хэш предыдущего блока'],\n    description: [\n        'Информация может быть любой, например, в блокчейне биткоина хранится информация о отправителе, получателе и сумме транзакции. Когда блок создан сразу вычисляется его хэш. Изменения внутри блока изменят его хэш. Третий элемент - это хэш предыдущего блока, благодаря которому эффективно создается цепочка блоков и обеспечивается ее безопасность.'\n    ],\n    button: 'Понятно',\n}\n\nconst english_text = {\n    title: 'One block contains:',\n    list: ['information', 'unique hash', 'previous block hash'],\n    description: [\n        'The information can be anything, for example, the bitcoin blockchain stores information about the sender, the recipient and the amount of the transaction. When a block is created, its hash is immediately computed. Changes inside the block will change its hash. The third element is the hash of the previous block, which effectively creates the blockchain and secures it.'\n    ],\n    button: 'Clearly',\n}\n\nexport { russian_text, english_text };","import { useSelector } from \"react-redux\";\nimport { Canvas, Node } from 'reaflow';\nimport { Tooltip } from '@mantine/core';\n\nimport Page from \"../../components/Page/index\";\nimport ButtonNextPage from \"../../components/ButtonNextPage/index\";\nimport styles from './styles.module.css';\nimport { russian_text, english_text } from './data';\n\nfunction Page2() {\n    const language = useSelector(state => state.language);\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    return (\n        <Page>\n            <h2>{text.title}</h2>\n            <div className={styles.main}>\n                <Tooltip\n                    wrapLines\n                    width={220}\n                    withArrow\n                    transition=\"fade\"\n                    transitionDuration={200}\n                    label=\"a3890eb2469875f2acd0075b57f04478026a56478b0e62523d63e4102a41c6d5\"\n                >\n                    <div className={styles.blockchain}>\n                        <Canvas\n                            pannable={false}\n                            readonly={true}\n                            direction=\"RIGHT\"\n                            nodes={[\n                                { id: '1', text: 'Block', width: 90, height: 90 }\n                            ]}\n                            node={(node: NodeProps) => (\n                                <Node\n                                    {...node}\n                                    style={{\n                                        fill: '#5c02d3'\n                                    }}\n                                />\n                            )}\n                        />\n                    </div>\n                </Tooltip>\n                <div>\n                    <p>• {text.list[0]}</p>\n                    <p>• {text.list[1]}</p>\n                    <p>• {text.list[2]}</p>\n                </div>\n            </div>\n            {text.description.map((description, i) => {\n                return (\n                    <p>{text.description[i]}</p>\n                )\n            })}\n            <ButtonNextPage>{text.button}</ButtonNextPage>\n        </Page>\n    )\n}\n\nexport default Page2;","const russian_text = {\n    title: 'Безопасность блокчейна',\n    description: [\n        'Если злоумышленик сможет подделать хэш одного блока, то все последующие блоки будут недействительными. Так злоумышленик может подделать все остальные блоки в сети, но чтобы избежать этого в блокчейне используется механизм Proof of Work, который замедляет создание новых блоков.',\n        'Алгоритм консенсуса — это правила, по которым происходит генерация блоков в блокчейне. В зависимости от используемого алгоритма в одних блокчейнах работает механизм майнинга для добычи новых монет, а в других — стейкинг, одни сети работают быстрее, но подвержены централизации, другие — медленнее, но их сложно взять под контроль недобросовестным участникам сети. Поэтому важно разбираться в отличиях между PoW, PoS, PoA и другими алгоритмами консенсуса, чтобы правильно оценить перспективы блокчейн-проекта.',\n        'Алгоритм консенсуса блокчейна — это способ, благодаря которому децентрализованные ноды сети достигают согласия (или консенсуса) о текущем состоянии данных во всех блоках. Нода — это любой компьютер, подключенный к блокчейну, который проверяет и подтверждает транзакции, и хранит копию блокчейна.'\n    ],\n    button: 'Понятно',\n}\n\nconst english_text = {\n    title: 'Blockchain security',\n    description: [\n        'If an attacker can forge the hash of one block, all subsequent blocks will be invalid. In this way, an attacker can forge all other blocks in the network, but to avoid this, the blockchain uses the Proof of Work mechanism, which slows down the creation of new blocks.',\n        'The consensus algorithm is the rules by which blocks in the blockchain are generated. Depending on the algorithm used, some blockchains have a mining mechanism for mining new coins and others have a stacking mechanism, some networks are faster but prone to centralization, others are slower but difficult for unscrupulous network participants to take control of. So it`s important to understand the differences between PoW, PoS, PoA and other consensus algorithms to properly assess the prospects for a blockchain project.',\n        'The blockchain consensus algorithm is the way in which the decentralized nodes of the network reach agreement (or consensus) on the current state of data in all blocks. A node is any computer connected to the blockchain that verifies and validates transactions, and keeps a copy of the blockchain.'\n    ],\n    button: 'Clearly',\n}\n\nexport { russian_text, english_text };","import { useSelector } from \"react-redux\";\n\nimport Page from \"../../components/Page/index\";\nimport ButtonNextPage from \"../../components/ButtonNextPage/index\";\nimport styles from './styles.module.css';\nimport { russian_text, english_text } from './data';\n\nfunction Page3() {\n    const language = useSelector(state => state.language);\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    return (\n        <Page>\n            <h2>{text.title}</h2>\n            {text.description.map((description, i) => {\n                return (\n                    <p>{text.description[i]}</p>\n                )\n            })}\n\n            <img className={styles.img} src={`${process.env.PUBLIC_URL}/img/security_blockchain.jpg`} alt=\"security_blockchain\"></img>\n\n            <ButtonNextPage>{text.button}</ButtonNextPage>\n        </Page>\n    )\n\n}\n\nexport default Page3;","const russian_text = {\n    title: 'Смарт-контракты',\n    description: [\n        'Смарт-контракты - это простые программы, которые хранятся в блокчейне и могут автоматически выполнятся при достижении определенных условий. Такая технология может использоваться не только в блокчейне, но и в повседных вещах, например, для хранения и обработки персональных данных, в маркетинге и компьютерных играх.',\n        'Как работают смарт контракты?',\n        'Смарт контракты можно условно сравнить с торговыми автоматами. Вы отправляете цифровые монеты в смарт контракт, а он отправляет вам то, что вы должны были получить. В реальном мире смарт контракт также можно сравнить с адвокатом или нотариусом, но в этом случае процесс совершения сделки происходит значительно дольше.',\n        'Смарт контракты полностью автономны, работают без участия человека и обеспечивают выполнение всех обязательств, прописанных в них. В них также могут быть прописаны штрафные санкции в случае несоблюдения договора. Смарт контракты - это та технология, которая меняет мир к лучшему.',\n    ],\n    button: 'Понятно',\n}\n\nconst english_text = {\n    title: 'Smart-contract',\n    description: [\n        'Smart contracts are simple programs that are stored in a blockchain and can be automatically executed when certain conditions are met. This technology can be used not only in blockchain, but also in everyday things, such as storing and processing personal data, in marketing, and in computer games.',\n        'How do smart contracts work?',\n        'Smart contracts can be roughly compared to vending machines. You send digital coins to a smart contract, and it sends you what you were supposed to receive. In the real world, a smart contract can also be compared to a lawyer or a notary, but in this case the transaction process takes much longer.',\n        'Smart contracts are fully autonomous, operate without human involvement, and ensure that all obligations spelled out in them are fulfilled. They can also include penalties in case of non-compliance with the contract. Smart contracts are the technology that changes the world for the better.',\n    ],\n    button: 'Got it',\n}\n\nexport { russian_text, english_text };","import { useSelector } from \"react-redux\";\nimport { Code, ScrollArea } from '@mantine/core';\n\nimport Page from \"../../components/Page/index\";\nimport ButtonNextPage from \"../../components/ButtonNextPage/index\";\n//import styles from './styles.module.css';\nimport { russian_text, english_text } from './data';\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n\nfunction Page4() {\n    const language = useSelector(state => state.language);\n    const { width } = useWindowDimensions();\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    const codeForPreviousDemo = `pragma solidity ^0.4.22;\ncontract helloWorld {\n    function renderHelloWorld () public pure returns (string) {\n        return 'helloWorld';\n    }\n}`;\n\n    return (\n        <Page>\n            <h2>{text.title}</h2>\n            <p>{text.description[0]}</p>\n            <ScrollArea>\n                <div style={{ width: width }}>\n                    <Code color=\"indigo\" style={{ textAlign: 'start', marginBottom: '30px' }} block>\n                        {codeForPreviousDemo}\n                    </Code>\n                </div>\n            </ScrollArea>\n            <h2>{text.description[1]}</h2>\n            {text.description.map((description, i) => {\n                if (i > 1) {\n                    return (\n                        <p>{text.description[i]}</p>\n                    )\n                }\n                else {\n                    return (\n                        <></>\n                    )\n                }\n            })}\n            <ButtonNextPage>{text.button}</ButtonNextPage>\n        </Page>\n    )\n}\n\nexport default Page4;","const russian_text = {\n    title: 'Майнинг',\n    description: [\n        'Суть майнинга в том, что компьютеры, находящиеся в самых разных местах по всему миру, проводят вычисления и таким образом генерируют новые блоки блокчейна и подобрать из миллионов комбинаций один-единственный хэш (результат некоего математического преобразования блока) от предыдущего блока — так можно «прикрепить» ещё один блок. За награду одновременно бьётся множество майнеров. Кто сделал это первым — тот и получает награду.',\n        'Майнинг самой популярной криптовалюты — биткоина — уже невозможен без специального дорогого оборудования. Майнинг является одним из самых популярных способов заработка на криптовалютах. Суть этого процесса во многом зависит от особенностей работы блокчейна. Соответственно, и методы добычи разных цифровых валют имеют свои отличия.',\n        'Наша команда смоделировала процесс майнинга в игре'\n    ],\n    button: 'К игре',\n}\n\nconst english_text = {\n    title: 'Mining',\n    description: [\n        'The essence of mining is that computers in many different locations around the world perform calculations and thus generate new blocks of the blockchain and pick up from millions of combinations a single hash (the result of some kind of mathematical transformation of the block) from the previous block - so another block can be \"attached\". A lot of miners are fighting for the reward at the same time. Whoever did it first gets the reward.',\n        'Mining the most popular cryptocurrency - bitcoin - is no longer possible without special expensive equipment. Mining is one of the most popular ways to make money from cryptocurrencies. The essence of this process largely depends on the features of the blockchain. Accordingly, the methods of mining different digital currencies have their own differences',\n        'Our team simulated the process of mining in the game'\n    ],\n    button: 'To play',\n}\n\nexport { russian_text, english_text };","import { useSelector } from \"react-redux\";\n\nimport Page from \"../../components/Page/index\";\nimport ButtonNextPage from \"../../components/ButtonNextPage/index\";\nimport styles from './styles.module.css';\nimport { russian_text, english_text } from './data';\n\nfunction Page3() {\n    const language = useSelector(state => state.language);\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    return (\n        <Page>\n            <h2>{text.title}</h2>\n            {text.description.map((description, i) => {\n                if ((i + 1) === text.description.length) {\n                    return (\n                        <></>\n                    )\n                }\n                else {\n                    return (\n                        <p>{text.description[i]}</p>\n                    )\n                }\n            })}\n            <img className={styles.img} src={`${process.env.PUBLIC_URL}/img/mining.jpg`} alt=\"mining\" />\n            <p>{text.description[text.description.length - 1]}</p>\n            <ButtonNextPage>{text.button}</ButtonNextPage>\n        </Page>\n    )\n\n}\n\nexport default Page3;","import React from 'react';\n\nimport styles from './styles.module.css';\n\nfunction Iframe(props) {\n    if (!props.source) {\n        return <div>Loading...</div>;\n    }\n    else {\n        return (\n            <div className={styles.wrapper}>\n                <iframe className={styles.iframe} title={props.title} src={props.source} seamless scrolling=\"no\">\n                    <p>Your browser is out of date for displaying the iframe element.</p>\n                </iframe>\n            </div>\n        );\n    }\n};\n\nexport default Iframe;","const russian_text = {\n    title: 'Игра',\n    description: [''],\n    button: '',\n}\n\nconst english_text = {\n    title: 'Game',\n    description: [''],\n    button: '',\n}\n\nexport { russian_text, english_text };","import React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\n\n//import Page from \"../../components/Page/index\";\n//import ButtonNextPage from \"../../components/ButtonNextPage/index\";\nimport Iframe from \"../../components/Iframe\";\nimport styles from './styles.module.css';\nimport { russian_text, english_text } from './data';\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n\nfunction Page5() {\n    const [urlClicker] = useState(\"https://zoxione.github.io/webgl-clicker\");\n    const language = useSelector(state => state.language);\n    const { width } = useWindowDimensions();\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    if (width < 500) {\n        return (\n            <div className={styles.page}>\n                <h2>{text.title}</h2>\n                <p>*please flip your phone*</p>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className={styles.page}>\n                <h2>{text.title}</h2>\n                <Iframe title=\"clicker\" source={urlClicker} />\n            </div>\n        )\n    }\n}\n\nexport default Page5;","const russian_text = {\n    title: 'Проверка знаний',\n    description: [''],\n    button_result: 'Проверить результат',\n    questionAnswers: [\n        {\n            question: 'Что такое блокчейн?',\n            answers: ['централизованная система', 'децентрализованная система', 'система, которая может быть как централизованной так и децентрализованной'],\n        },\n        {\n            question: 'Какой из консенсусов не существует?',\n            answers: ['proof of work', 'proof of stake', 'proof of server'],\n        },\n        {\n            question: 'Для чего нужен майнинг в блокчейне?',\n            answers: ['для добавления новых блоков', 'для заработка криптовалют', 'не необязателен'],\n        },\n    ],\n    result: 'Результат теста'\n}\n\nconst english_text = {\n    title: 'Knowledge check',\n    description: [''],\n    button_result: 'Check the result',\n    questionAnswers: [\n        {\n            question: 'What is blockchain?',\n            answers: ['centralized system', 'decentralized system', 'system, which can be both centralized and decentralized'],\n        },\n        {\n            question: 'Which consensus does not exist?',\n            answers: ['proof of work', 'proof of stake', 'proof of server'],\n        },\n        {\n            question: 'What is blockchain mining for?',\n            answers: ['to add new blocks', 'for earning cryptocurrencies', 'not optional'],\n        },\n    ],\n    result: 'Test result'\n}\n\nexport { russian_text, english_text };","import React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Button } from '@mantine/core';\nimport { VscDebugRestart } from \"react-icons/vsc\"\n\nimport Page from \"../../components/Page/index\";\nimport styles from './styles.module.css';\nimport { russian_text, english_text } from './data';\n\nfunction QuestionAnswer(props) {\n    return (\n        <form>\n            <p>{props.question}</p>\n            <div className={styles.answers} id=\"ans_wrapper\">\n                <div className={styles.answer} id=\"answer\">\n                    <input type=\"radio\" name=\"answer_input\" value={props.true === 1 ? \"true\" : \"false\"} className={styles.radio}></input>\n                    <span>{props.answer1}</span>\n                </div>\n                <div className={styles.answer} id=\"answer\">\n                    <input type=\"radio\" name=\"answer_input\" value={props.true === 2 ? \"true\" : \"false\"} className={styles.radio}></input>\n                    <span>{props.answer2}</span>\n                </div>\n                <div className={styles.answer} id=\"answer\">\n                    <input type=\"radio\" name=\"answer_input\" value={props.true === 3 ? \"true\" : \"false\"} className={styles.radio}></input>\n                    <span>{props.answer3}</span>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nfunction Page9() {\n    const language = useSelector(state => state.language);\n\n    var text;\n    switch (language) {\n        case \"rus\":\n            text = russian_text;\n            break;\n        case \"eng\":\n            text = english_text;\n            break;\n        default:\n            text = russian_text;\n            break;\n    }\n\n    const [countTrue, setCountTrue] = useState(0);\n    const [isTestCompleted, setIsTestCompleted] = useState(false);\n\n    const isValid = () => {\n        let answerWrapperList = document.querySelectorAll('#ans_wrapper');\n        let isValid = true;\n\n        answerWrapperList.forEach(item => {\n            let answerList = item.childNodes;\n            let isChecked = false;\n\n            for (let i = 0; i < answerList.length; i++) {\n                let radio = answerList[i].firstChild;\n                if (radio.checked) {\n                    isChecked = true;\n                    break;\n                }\n            }\n\n            if (isChecked === false) {\n                isValid = false;\n            }\n        });\n\n        return isValid;\n    }\n\n    const checkResult = () => {\n        if (isValid()) {\n            let radios = document.querySelectorAll('input');\n            let answerList = document.querySelectorAll('#answer');\n            let count = 0, index = 0;\n\n            radios.forEach(item => {\n                if (item.checked && item.value === \"true\") {\n                    count++;\n                    item.style.background = 'green';\n                    answerList[index].style.color = 'green';\n                }\n                else if (item.checked && item.value === \"false\") {\n                    item.style.background = 'red';\n                    answerList[index].style.color = 'red';\n                }\n\n                item.disabled = true;\n                item.checked = false;\n                index++;\n            });\n\n            setCountTrue(count);\n            setIsTestCompleted(true);\n        }\n    }\n\n    const againTest = () => {\n        setCountTrue(0);\n        setIsTestCompleted(false);\n\n        let radios = document.querySelectorAll('input');\n        radios.forEach(item => {\n            item.disabled = false;\n            item.style.background = '#fff';\n        });\n        let answerList = document.querySelectorAll('#answer');\n        answerList.forEach(item => {\n            item.style.color = '#393E46'\n        });\n    }\n\n    return (\n        <Page>\n            <h2>{text.title}</h2>\n            <div>\n                <QuestionAnswer\n                    question={'1. ' + text.questionAnswers[0].question}\n                    answer1={text.questionAnswers[0].answers[0]}\n                    answer2={text.questionAnswers[0].answers[1]}\n                    answer3={text.questionAnswers[0].answers[2]}\n                    true={2}\n                />\n                <QuestionAnswer\n                    question={'2. ' + text.questionAnswers[1].question}\n                    answer1={text.questionAnswers[1].answers[0]}\n                    answer2={text.questionAnswers[1].answers[1]}\n                    answer3={text.questionAnswers[1].answers[2]}\n                    true={3}\n                />\n                <QuestionAnswer\n                    question={'3. ' + text.questionAnswers[2].question}\n                    answer1={text.questionAnswers[2].answers[0]}\n                    answer2={text.questionAnswers[2].answers[1]}\n                    answer3={text.questionAnswers[2].answers[2]}\n                    true={1}\n                />\n                {isTestCompleted\n                    ? <div className={styles.block_result}>\n                        <p>{text.result}: {countTrue}</p>\n                        <Button className={styles.btn_again} onClick={() => againTest()} variant=\"subtle\">\n                            <VscDebugRestart size={35} />\n                        </Button>\n                    </div>\n                    : <button onClick={() => checkResult()} className={styles.btn_check}>{text.button_result}</button>\n                }\n            </div>\n        </Page >\n    )\n}\n\nexport default Page9;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport styles from './App.module.css';\nimport MainMenu from \"./components/MainMenu\";\nimport Page0 from \"./pages/Page0\";\nimport Page1 from \"./pages/Page1\";\nimport Page2 from \"./pages/Page2\";\nimport Page3 from \"./pages/Page3\";\nimport Page4 from \"./pages/Page4\";\nimport Page5 from \"./pages/Page5\";\nimport Page6 from \"./pages/Page6\";\nimport Page9 from \"./pages/Page9\";\n\nfunction App() {\n    const page = useSelector(state => state.page);\n\n    return (\n        <div>\n            <div className={styles.main}>\n                {page === 0 &&\n                    <Page0 />\n                }\n                {page === 1 &&\n                    <Page1 />\n                }\n                {page === 2 &&\n                    <Page2 />\n                }\n                {page === 3 &&\n                    <Page3 />\n                }\n                {page === 4 &&\n                    <Page4 />\n                }\n                {page === 5 &&\n                    <Page5 />\n                }\n                {page === 6 &&\n                    <Page6 />\n                }\n                {page === 9 &&\n                    <Page9 />\n                }\n            </div>\n            <MainMenu />\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nconst defaultState = {\n    page: 0,\n    language: \"rus\",\n    sound: false,\n}\n\nconst reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case \"SET_PAGE\":\n            return {...state, page: action.payload}\n        case \"TOGGLE_LANGUAGE\":\n            return {...state, language: state.language === \"rus\" ? \"eng\" : \"rus\"}\n        case \"TOGGLE_SOUND\":\n            return {...state, sound: state.sound === true ? false : true}\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"styles_menu__1CqkG\",\"sound_button\":\"styles_sound_button__1yhqf\",\"sound_icon\":\"styles_sound_icon__2U4Bk\",\"sound_on\":\"styles_sound_on__1ZyF6\",\"sound_off\":\"styles_sound_off__2hnEo\",\"lang_button\":\"styles_lang_button__3DqnF\",\"lang_icon\":\"styles_lang_icon__3W6Lx\",\"pagination\":\"styles_pagination__19_Mz\",\"pagination_item\":\"styles_pagination_item__4sWQj\",\"pagination_item_active\":\"styles_pagination_item_active__vw0WX\",\"min_menu\":\"styles_min_menu__3XOG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answers\":\"styles_answers__2jmyJ\",\"answer\":\"styles_answer__1AW8a\",\"radio\":\"styles_radio__1zukO\",\"block_result\":\"styles_block_result__3_hUA\",\"content\":\"styles_content__2tx1-\",\"btn_check\":\"styles_btn_check__3bhpq\",\"btn_again\":\"styles_btn_again__2mjrS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockchain\":\"styles_blockchain__1x8X0\",\"btn_question\":\"styles_btn_question__2BEYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__23PBe\",\"blockchain\":\"styles_blockchain__30AW3\",\"block\":\"styles_block__2QzGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__DYi70\",\"iframe\":\"styles_iframe__1kp51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__3BEho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3ZkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__2XvVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_next\":\"styles_button_next__2HmdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1dGgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__1bnVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__DF89f\"};"],"sourceRoot":""}